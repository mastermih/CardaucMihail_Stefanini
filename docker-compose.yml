version: '3.8'

services:
  app:
    build: .
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/test
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: sql
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      - logs_data:/app
      - files_data:/app/public/userProfileImages
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network
      - monitoring

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: sql
      MYSQL_DATABASE: test
    ports:
      - "3307:3306"
    networks:
      - app-network


  frontend:
          build:
            context: C:\Users\MCARDAUC\Desktop\front-app
            dockerfile: Dockerfile
          container_name: react-frontend
          ports:
          - "3000:3000"
          volumes:
            - react-build:/app/build
          networks:
            - app-network
          depends_on:
            - app

  cdn-service:
            build:
              context: D:\CDN\cdn-service
              dockerfile: Dockerfile
            container_name: cdn-service
            ports:
            - "9090:9090"
            volumes:
              - "D:/CDN/StaticFiles:/app/staticFiles"
            networks:
              - app-network

  nginx-proxy:
    build:
      dockerfile: nginx.Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - react-build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
        - xpack.security.http.ssl.enabled=false
      networks:
        - elastic-net
      ports:
        - "9200:9200"


  kibana:
    image: docker.elastic.co/kibana/kibana:8.2.0
    ports:
     - "5601:5601"
    depends_on:
     - elasticsearch
    environment:
     - ELASTICSEARCH_HOSTS=http://order-management-elasticsearch-1:9200
    networks:
     - elastic-net


  logstash:
    image: docker.elastic.co/logstash/logstash:8.2.0
    container_name: logstash
    environment:
      - xpack.monitoring.elasticsearch.username=elastic
      - xpack.monitoring.elasticsearch.password=your_password
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash-config.yml:/usr/share/logstash/config/logstash.yml
      - logs_data:/app/logs
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch
    networks:
      - monitoring
      - elastic-net



networks:
  app-network:
  monitoring:
  elastic-net:
      driver: bridge


volumes:
  logs_data:
  files_data:
  react-build:
