2024-10-16 10:15:49 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-16 10:15:49 [main] INFO  c.I.o.OrderManagementApplication - Starting OrderManagementApplication using Java 17.0.11 with PID 23476 (D:\order-management\target\classes started by mcardauc in D:\order-management)
2024-10-16 10:15:49 [main] INFO  c.I.o.OrderManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-16 10:15:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-10-16 10:15:52 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-16 10:15:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-16 10:15:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-10-16 10:15:52 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-16 10:15:52 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2669 ms
2024-10-16 10:15:59 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtFilter': Unsatisfied dependency expressed through field 'customUserDetailsService': Error creating bean with name 'customUserDetailsService' defined in file [D:\order-management\target\classes\com\ImperioElevator\ordermanagement\security\CustomUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userDaoImpl' defined in file [D:\order-management\target\classes\com\ImperioElevator\ordermanagement\dao\daoimpl\UserDaoImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2024-10-16 10:15:59 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-16 10:15:59 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2024-10-16 10:15:59 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-16 10:15:59 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.ImperioElevator.ordermanagement.OrderManagementApplication.main(OrderManagementApplication.java:18)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtFilter': Unsatisfied dependency expressed through field 'customUserDetailsService': Error creating bean with name 'customUserDetailsService' defined in file [D:\order-management\target\classes\com\ImperioElevator\ordermanagement\security\CustomUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userDaoImpl' defined in file [D:\order-management\target\classes\com\ImperioElevator\ordermanagement\dao\daoimpl\UserDaoImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:716)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:696)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4886)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1328)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1318)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:428)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService' defined in file [D:\order-management\target\classes\com\ImperioElevator\ordermanagement\security\CustomUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userDaoImpl' defined in file [D:\order-management\target\classes\com\ImperioElevator\ordermanagement\dao\daoimpl\UserDaoImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:713)
	... 55 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userDaoImpl' defined in file [D:\order-management\target\classes\com\ImperioElevator\ordermanagement\dao\daoimpl\UserDaoImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 82 common frames omitted
Caused by: liquibase.exception.DatabaseException: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 95 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:681)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:190)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:155)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:146)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:205)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:169)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:281)
	... 97 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	... 107 common frames omitted
Caused by: java.net.UnknownHostException: No such host is known (mysql)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:934)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 110 common frames omitted
2024-10-16 10:16:30 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-16 10:16:30 [main] INFO  c.I.o.OrderManagementApplication - Starting OrderManagementApplication using Java 17.0.11 with PID 18208 (D:\order-management\target\classes started by mcardauc in D:\order-management)
2024-10-16 10:16:30 [main] INFO  c.I.o.OrderManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-16 10:16:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-10-16 10:16:32 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-16 10:16:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-16 10:16:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-10-16 10:16:32 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-16 10:16:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1833 ms
2024-10-16 10:16:34 [main] INFO  liquibase.changelog - Reading from test.DATABASECHANGELOG
2024-10-16 10:16:34 [main] INFO  liquibase.executor - Changelog query completed.
2024-10-16 10:16:34 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7434ee13, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44a14de0, org.springframework.security.web.context.SecurityContextHolderFilter@12266084, org.springframework.security.web.header.HeaderWriterFilter@5a583720, org.springframework.web.filter.CorsFilter@50fd739d, org.springframework.security.web.authentication.logout.LogoutFilter@7402c49f, com.ImperioElevator.ordermanagement.security.JwtFilter@9c0d0bd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a65e237, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@41f686af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e1d1524, org.springframework.security.web.session.SessionManagementFilter@4d664323, org.springframework.security.web.access.ExceptionTranslationFilter@b339a08, org.springframework.security.web.access.intercept.AuthorizationFilter@326706d]
2024-10-16 10:16:34 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-16 10:16:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-10-16 10:16:35 [main] INFO  c.I.o.OrderManagementApplication - Started OrderManagementApplication in 4.862 seconds (process running for 5.371)
2024-10-16 10:16:35 [main] INFO  c.I.o.OrderManagementApplication - Application started successfully
2024-10-16 10:16:54 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-16 10:16:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-16 10:16:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 16 ms
2024-10-16 10:16:54 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-16 10:16:54 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-16 10:16:54 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-16 10:16:54 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-16 10:16:54 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:16:54 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:16:54 [http-nio-8080-exec-9] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.NotificationController
2024-10-16 10:16:54 [http-nio-8080-exec-6] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.UserController
2024-10-16 10:16:54 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:16:54 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:16:54 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:16:54 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:16:54 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:16:54 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:16:54 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:16:54 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:16:54 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:16:54 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:16:58 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:16:58 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:16:58 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:16:58 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:16:59 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 10:16:59 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 10:16:59 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 10:16:59 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 10:16:59 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:16:59 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:16:59 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:16:59 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:04 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:04 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:04 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:17:04 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:17:05 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:17:05 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:17:05 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:17:05 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:17:05 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:17:05 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:17:05 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:05 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:08 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:08 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:09 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:09 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:10 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:10 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:10 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:10 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:10 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:10 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:13 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 10:17:13 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 10:17:13 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 10:17:13 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 10:17:13 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:13 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:17:13 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:17:13 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:18:13 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:18:13 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:18:55 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:18:55 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:18:55 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:18:55 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:18:55 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:18:55 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Order received with userId: 1
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Order received with userId: 1
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing creation of the Order: INSERT INTO orders (user_id, created_date, updated_date, order_status) VALUES (?, ?, ?, ?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing creation of the Order: INSERT INTO orders (user_id, created_date, updated_date, order_status) VALUES (?, ?, ?, ?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully inserted Order for userId: 1
2024-10-16 10:18:56 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully inserted Order for userId: 1
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting token for orderId: 112
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting token for orderId: 112
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@14264f2c
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@14264f2c
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Get management users from the db SELECT u.* FROM user u JOIN user_roles ur ON u.id = ur.user_id JOIN roles r ON ur.role_id = r.id WHERE r.role_name IN ('ADMIN','MANAGER','SALESMAN')
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Get management users from the db SELECT u.* FROM user u JOIN user_roles ur ON u.id = ur.user_id JOIN roles r ON ur.role_id = r.id WHERE r.role_name IN ('ADMIN','MANAGER','SALESMAN')
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-16 10:18:56 [http-nio-8080-exec-3] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 112
2024-10-16 10:18:56 [http-nio-8080-exec-3] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 112
2024-10-16 10:19:00 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:19:00 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:19:00 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:19:00 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:19:00 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:19:00 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:19:00 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:19:00 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:19:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products by name: SELECT * FROM product WHERE product_name LIKE ? AND category_type NOT IN ('Elevator')
2024-10-16 10:19:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products by name: SELECT * FROM product WHERE product_name LIKE ? AND category_type NOT IN ('Elevator')
2024-10-16 10:19:07 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-16 10:19:07 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-16 10:19:07 [http-nio-8080-exec-3] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 112
2024-10-16 10:19:07 [http-nio-8080-exec-3] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 112
2024-10-16 10:19:07 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:19:07 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:19:07 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:19:07 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:19:12 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products by name: SELECT * FROM product WHERE product_name LIKE ? AND category_type NOT IN ('Elevator')
2024-10-16 10:19:12 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products by name: SELECT * FROM product WHERE product_name LIKE ? AND category_type NOT IN ('Elevator')
2024-10-16 10:19:12 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products by name: SELECT * FROM product WHERE product_name LIKE ? AND category_type NOT IN ('Elevator')
2024-10-16 10:19:12 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products by name: SELECT * FROM product WHERE product_name LIKE ? AND category_type NOT IN ('Elevator')
2024-10-16 10:19:14 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-16 10:19:14 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-16 10:19:14 [http-nio-8080-exec-5] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 112
2024-10-16 10:19:14 [http-nio-8080-exec-5] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 112
2024-10-16 10:19:14 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:19:14 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:19:14 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:19:14 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:19:28 [http-nio-8080-exec-1] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.OrderController
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL to find OrderProducts by orderId: SELECT * FROM order_product WHERE order_id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL to find OrderProducts by orderId: SELECT * FROM order_product WHERE order_id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully retrieved OrderProducts for orderId: 112
2024-10-16 10:19:28 [http-nio-8080-exec-1] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully retrieved OrderProducts for orderId: 112
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Selecting the order token with query: SELECT token_value FROM token WHERE order_id = ? AND token_type = 'ORDER' AND is_enabled = true
2024-10-16 10:19:28 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Selecting the order token with query: SELECT token_value FROM token WHERE order_id = ? AND token_type = 'ORDER' AND is_enabled = true
2024-10-16 10:19:33 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-16 10:19:33 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-16 10:19:33 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 112
2024-10-16 10:19:33 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 112
2024-10-16 10:19:33 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:19:33 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:19:33 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:19:33 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:20:13 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:13 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:13 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:20:13 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:20:13 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:13 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:13 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:13 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:13 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:13 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:13 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:20:13 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:20:17 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:20:17 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:20:17 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:20:17 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:20:17 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:20:17 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:20:17 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:20:17 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:20:25 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:20:25 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:20:25 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:25 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:25 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:20:25 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:20:25 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:25 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:25 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:25 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:25 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:25 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Fiend Order by id: SELECT * FROM orders WHERE id = ?
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Fiend Order by id: SELECT * FROM orders WHERE id = ?
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-16 10:20:27 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 112
2024-10-16 10:20:27 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 112
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@2147ed7c
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@2147ed7c
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read, is_disabled) VALUES(?,?,?,?)
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Add actual user (Me) as order operator INSERT INTO order_operators (order_id, user_id) VALUES (?, ?)
2024-10-16 10:20:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Add actual user (Me) as order operator INSERT INTO order_operators (order_id, user_id) VALUES (?, ?)
2024-10-16 10:20:27 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:27 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:20:27 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:27 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:20:29 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:20:29 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:20:29 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:20:29 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:20:29 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:20:29 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:20:29 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:20:29 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:27:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:27:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:27:45 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:27:45 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:27:45 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:27:57 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:27:57 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:27:57 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:27:57 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:27:57 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:27:57 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:27:57 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:27:57 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:27:57 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:27:57 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:27:57 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:27:57 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:28:00 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:00 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:00 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:00 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:00 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:00 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:00 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:00 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:00 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:00 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:00 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:00 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:05 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:05 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:05 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:05 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:05 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:05 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:17 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:17 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:17 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:17 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:17 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:36 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:28:36 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:36 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:28:36 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:28:36 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:35:57 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:35:57 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:35:57 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:35:57 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:35:57 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:38:59 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:38:59 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:38:59 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:38:59 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:38:59 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:38:59 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:38:59 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:38:59 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:38:59 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:38:59 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:38:59 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:38:59 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:39:06 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:06 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:06 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:06 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:08 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 10:39:08 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 10:39:08 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 10:39:08 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 10:39:08 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:08 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:08 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:08 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:17 [http-nio-8080-exec-2] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.ProductController
2024-10-16 10:39:17 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-16 10:39:17 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-16 10:39:17 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-16 10:39:17 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-16 10:39:17 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:17 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:17 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:17 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:34 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:34 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 10:39:34 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:39:34 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:39:34 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:39:34 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:39:34 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:39:34 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 10:39:34 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:39:34 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 10:39:35 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:35 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 10:39:36 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:39:36 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:39:36 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:39:36 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:39:36 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:39:36 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:39:36 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:36 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:36 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:36 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:36 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:36 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:43 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:39:43 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:39:43 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:39:43 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:39:43 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:39:43 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:39:44 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:44 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:44 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:44 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:44 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:39:44 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:43:38 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:43:38 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:43:38 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:43:38 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:38 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:43:54 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:43:54 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:43:54 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:43:54 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:43:54 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:44:03 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:44:03 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:44:03 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:44:03 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:03 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:44:07 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:44:07 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:44:07 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:44:07 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:44:07 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:45:04 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:45:04 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:45:04 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:45:04 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:04 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:45:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 10:45:45 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:45:45 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 10:45:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:45:45 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 10:59:59 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-16 10:59:59 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-16 10:59:59 [scheduling-1] INFO  c.I.o.entity.OrderCleanupService - Expired Orders: 0
2024-10-16 11:08:10 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:08:10 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:08:10 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:08:10 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:08:10 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:08:10 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:08:11 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:11 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:11 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:11 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:11 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:11 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:08:24 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:08:24 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:08:24 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:08:24 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:08:24 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:09:37 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:09:37 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:09:37 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:09:37 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:09:37 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:10:02 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:10:02 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:10:02 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:10:02 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:02 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:10:35 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:10:35 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:10:35 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:10:35 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:35 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:10:45 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:10:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:10:45 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:10:45 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:10:45 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:15:05 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:15:05 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:15:05 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:15:05 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:05 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:15:22 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:15:22 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:15:22 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:15:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:22 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:15:45 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:15:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:15:45 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:15:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:15:45 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:16:18 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:16:18 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:16:18 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:16:18 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:18 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:26 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:16:26 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:16:26 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:16:26 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:16:26 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:16:26 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:16:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:27 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:27 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:27 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:16:27 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:18:38 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:18:38 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:18:38 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:18:38 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:18:38 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:18:38 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:18:39 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:18:39 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:18:39 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:18:39 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:18:39 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:18:39 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:19:13 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:19:13 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:19:13 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:19:13 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:13 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:19:27 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:19:27 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:19:27 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:19:27 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:19:27 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:24:52 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:24:52 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:24:52 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:24:52 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:24:52 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:27:38 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:27:38 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:27:38 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:27:38 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:27:38 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:38 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:38 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:27:38 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:27:38 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:27:38 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:27:39 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:27:39 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:27:41 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:41 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:41 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:27:41 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:27:44 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 11:27:44 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-16 11:27:44 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 11:27:44 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-16 11:27:44 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:44 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:44 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:27:44 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:27:47 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:27:47 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:27:47 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:47 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:27:47 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:27:47 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:28:47 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:28:47 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:29:02 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "orders"]
2024-10-16 11:29:05 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:29:05 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:29:16 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-16 11:29:16 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-16 11:29:17 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-16 11:29:17 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-16 11:29:17 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:29:17 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-16 11:29:17 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:29:17 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:29:17 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:29:17 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:29:17 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:29:17 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.id, n.message, n.created_date FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_disabled = 0
2024-10-16 11:29:17 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:29:17 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-16 11:29:17 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:29:17 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-16 11:29:18 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:29:18 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:29:18 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:29:18 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:29:19 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:29:19 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:29:19 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:29:19 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:29:19 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:29:19 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:29:19 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:29:19 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:02 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:02 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:02 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:02 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:02 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:14 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:14 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:14 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:14 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:14 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:22 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:22 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:22 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:22 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:27 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:32:27 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:27 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:32:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:32:27 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:34:56 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:34:56 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:34:56 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:34:56 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:34:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:35:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:35:05 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:35:05 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:35:05 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:05 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:35:10 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:35:10 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:35:10 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:35:10 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:35:10 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:29 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:29 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:29 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:29 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:29 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:31 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:31 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:31 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:31 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:31 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:34 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:34 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:34 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:34 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:34 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:39 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:39 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:36:39 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:39 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:36:40 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:40 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:36:40 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:40 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:40 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:40 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:40 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:36:40 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:38:23 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:38:23 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:38:23 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:38:23 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:38:23 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:38:23 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:38:24 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:38:24 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:38:24 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:38:24 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:38:24 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:38:24 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:39:36 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:39:36 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:39:36 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:39:36 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:39:36 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:40:30 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:40:30 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:40:30 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:40:30 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:40:30 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:42:58 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:42:58 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:42:58 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:42:58 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:42:58 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:43:06 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the operator name('s) for order SELECT u.username FROM user u JOIN order_operators oo ON u.id = oo.user_id WHERE oo.order_id = ? GROUP BY u.username
2024-10-16 11:43:06 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:43:06 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 112
2024-10-16 11:43:06 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-16 11:43:06 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
