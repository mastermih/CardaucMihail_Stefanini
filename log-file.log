2024-10-10 00:00:00 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-10 00:00:00 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-10 00:00:00 [scheduling-1] INFO  c.I.o.entity.OrderCleanupService - Expired Orders: 0
2024-10-10 09:47:42 [http-nio-8080-exec-8] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.UserController
2024-10-10 09:47:42 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:47:42 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:47:42 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:47:42 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:47:57 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 09:47:57 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 09:47:57 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 09:47:57 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 09:47:58 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:47:58 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:01 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 09:48:01 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 09:48:01 [http-nio-8080-exec-10] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.NotificationController
2024-10-10 09:48:01 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:48:01 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:48:01 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:01 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:01 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 09:48:01 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 09:48:35 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-10 09:48:35 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-10 09:48:35 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-10 09:48:35 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-10 09:48:35 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:35 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:37 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 09:48:37 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 09:48:37 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:37 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Order received with userId: 2
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Order received with userId: 2
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing creation of the Order: INSERT INTO orders (user_id, created_date, updated_date, order_status) VALUES (?, ?, ?, ?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing creation of the Order: INSERT INTO orders (user_id, created_date, updated_date, order_status) VALUES (?, ?, ?, ?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully inserted Order for userId: 2
2024-10-10 09:48:41 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully inserted Order for userId: 2
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting token for orderId: 103
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting token for orderId: 103
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@463fee8e
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@463fee8e
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Get management users from the db SELECT u.* FROM user u JOIN user_roles ur ON u.id = ur.user_id JOIN roles r ON ur.role_id = r.id WHERE r.role_name IN ('ADMIN','MANAGER','SALESMAN')
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Get management users from the db SELECT u.* FROM user u JOIN user_roles ur ON u.id = ur.user_id JOIN roles r ON ur.role_id = r.id WHERE r.role_name IN ('ADMIN','MANAGER','SALESMAN')
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-10 09:48:41 [http-nio-8080-exec-5] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 103
2024-10-10 09:48:41 [http-nio-8080-exec-5] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 103
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Order received with userId: 2
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Order received with userId: 2
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing creation of the Order: INSERT INTO orders (user_id, created_date, updated_date, order_status) VALUES (?, ?, ?, ?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing creation of the Order: INSERT INTO orders (user_id, created_date, updated_date, order_status) VALUES (?, ?, ?, ?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully inserted Order for userId: 2
2024-10-10 09:48:45 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully inserted Order for userId: 2
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting token for orderId: 104
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting token for orderId: 104
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@65ed9148
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@65ed9148
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Get management users from the db SELECT u.* FROM user u JOIN user_roles ur ON u.id = ur.user_id JOIN roles r ON ur.role_id = r.id WHERE r.role_name IN ('ADMIN','MANAGER','SALESMAN')
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Get management users from the db SELECT u.* FROM user u JOIN user_roles ur ON u.id = ur.user_id JOIN roles r ON ur.role_id = r.id WHERE r.role_name IN ('ADMIN','MANAGER','SALESMAN')
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL for order product insert: INSERT INTO order_product (order_id, product_name, quantity, price_product, parent_product_id, product_id) VALUES (?, ?, ?, ?, ?, ?)
2024-10-10 09:48:45 [http-nio-8080-exec-6] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 104
2024-10-10 09:48:45 [http-nio-8080-exec-6] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully inserted OrderProduct with orderId: 104
2024-10-10 09:48:47 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL to find OrderProducts by orderId: SELECT * FROM order_product WHERE order_id = ?
2024-10-10 09:48:47 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL to find OrderProducts by orderId: SELECT * FROM order_product WHERE order_id = ?
2024-10-10 09:48:47 [http-nio-8080-exec-8] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully retrieved OrderProducts for orderId: 104
2024-10-10 09:48:47 [http-nio-8080-exec-8] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully retrieved OrderProducts for orderId: 104
2024-10-10 09:48:47 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 09:48:47 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 09:48:47 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Selecting the order token with query: SELECT token_value FROM token WHERE order_id = ? AND token_type = 'ORDER' AND is_enabled = true
2024-10-10 09:48:47 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Selecting the order token with query: SELECT token_value FROM token WHERE order_id = ? AND token_type = 'ORDER' AND is_enabled = true
2024-10-10 09:48:48 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:48 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-10 09:48:48 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:48 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to get Order and its products: SELECT     o.id,     o.user_id,     o.order_status,     o.created_date,     o.updated_date FROM     orders o WHERE     o.id = ?, SELECT     op.order_id,     op.quantity,     op.price_product,     op.product_id,     op.parent_product_id,     p.product_name,     p.category_type,     p.image_path FROM     order_product op JOIN     product p ON     op.product_id = p.id WHERE     op.order_id = ?
2024-10-10 09:48:48 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 103
2024-10-10 09:48:48 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Order with products for id: 103
2024-10-10 09:48:51 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL to find OrderProducts by orderId: SELECT * FROM order_product WHERE order_id = ?
2024-10-10 09:48:51 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.OrderProductDaoImpl - Executing SQL to find OrderProducts by orderId: SELECT * FROM order_product WHERE order_id = ?
2024-10-10 09:48:51 [http-nio-8080-exec-3] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully retrieved OrderProducts for orderId: 103
2024-10-10 09:48:51 [http-nio-8080-exec-3] INFO  c.I.o.d.daoimpl.OrderProductDaoImpl - Successfully retrieved OrderProducts for orderId: 103
2024-10-10 09:48:51 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 09:48:51 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 09:48:51 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Selecting the order token with query: SELECT token_value FROM token WHERE order_id = ? AND token_type = 'ORDER' AND is_enabled = true
2024-10-10 09:48:51 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Selecting the order token with query: SELECT token_value FROM token WHERE order_id = ? AND token_type = 'ORDER' AND is_enabled = true
2024-10-10 09:48:52 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-10 09:48:52 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-10 09:48:52 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 104
2024-10-10 09:48:52 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 104
2024-10-10 09:48:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-10 09:48:56 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-10 09:48:56 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 103
2024-10-10 09:48:56 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 103
2024-10-10 09:48:56 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:48:56 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:50:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 09:50:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 09:50:03 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:50:03 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:50:04 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:50:04 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:50:04 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 09:50:04 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 09:50:15 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:50:16 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 09:50:16 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 09:50:15 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:50:16 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 09:50:16 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 09:50:16 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 09:50:16 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 09:50:16 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 09:50:16 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 09:50:16 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:50:16 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:51:01 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:01 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:01 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:51:01 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:51:02 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:02 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:02 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:51:02 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:51:03 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:03 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:03 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:51:03 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Fiend Order by id: SELECT * FROM orders WHERE id = ?
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Fiend Order by id: SELECT * FROM orders WHERE id = ?
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL for order status update: UPDATE orders SET order_status = ?, updated_date = ? WHERE id = ?
2024-10-10 09:51:23 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 103
2024-10-10 09:51:23 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully updated Order status for id: 103
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@23e5eb38
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Inserting the notification in db com.ImperioElevator.ordermanagement.entity.Notification@23e5eb38
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Inserting in user_notification values related to the notification INSERT INTO user_notifications (user_id, notification_id, is_read) VALUES(?,?,?)
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Add actual user (Me) as order operator INSERT INTO order_operators (order_id, user_id) VALUES (?, ?)
2024-10-10 09:51:23 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Add actual user (Me) as order operator INSERT INTO order_operators (order_id, user_id) VALUES (?, ?)
2024-10-10 09:51:23 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 09:51:23 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 09:51:23 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 09:51:23 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 09:51:27 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:51:27 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 09:51:27 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 09:51:27 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 09:51:27 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:51:27 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 09:51:27 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 09:51:27 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 09:51:59 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:59 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:51:59 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:51:59 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:52:00 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:52:00 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:52:00 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:52:00 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:52:02 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:52:02 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 09:52:02 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 09:52:02 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 10:01:11 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:01:11 [http-nio-8080-exec-5] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:01:11 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 10:01:11 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to fiend paginable orders by created date
2024-10-10 10:01:12 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 10:01:12 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved paginable Orders by created date
2024-10-10 10:01:27 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:01:27 [http-nio-8080-exec-9] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:01:27 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 10:01:27 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 10:01:27 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 10:01:27 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 10:01:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:01:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:01:58 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:01:58 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:01:58 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:01:58 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:01:58 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:01:58 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:01:58 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:01:58 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:01:58 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:01:58 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:02:01 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:01 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:36 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:02:36 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:02:36 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 10:02:36 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders for User role: SELECT * FROM orders WHERE user_id = ? ORDER BY id ASC LIMIT ?
2024-10-10 10:02:36 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 10:02:36 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders for User role
2024-10-10 10:02:39 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:39 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:39 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:39 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:41 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:41 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:42 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:42 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:42 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:02:42 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:03:03 [http-nio-8080-exec-8] WARN  o.apache.catalina.connector.Request - Creating the temporary upload location [C:\Users\MCARDAUC\AppData\Local\Temp\tomcat.8080.3918455138501191850\work\Tomcat\localhost\ROOT] as it is required by the servlet [dispatcherServlet]
2024-10-10 10:03:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the user image SELECT image FROM user WHERE id = ?
2024-10-10 10:03:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Geting the user image SELECT image FROM user WHERE id = ?
2024-10-10 10:03:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Successfully added image path to user with id: 2
2024-10-10 10:03:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Successfully added image path to user with id: 2
2024-10-10 10:03:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:03:03 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:03:05 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:03:05 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:03:34 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-10 10:03:34 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-10 10:03:34 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-10 10:03:34 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-10 10:03:34 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:03:34 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:00 [http-nio-8080-exec-3] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.ProductController
2024-10-10 10:05:00 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:00 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:00 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-10 10:05:00 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-10 10:05:00 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:00 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:03 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:03 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:03 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 2 and pageSize: 6
2024-10-10 10:05:03 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 2 and pageSize: 6
2024-10-10 10:05:03 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:03 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:11 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? AND price >= ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:11 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? AND price >= ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:11 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-10 10:05:11 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-10 10:05:12 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:12 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:16 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? AND price BETWEEN ? AND ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:16 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to filter Products: SELECT * FROM product WHERE 1=1 AND category_type = ? AND price BETWEEN ? AND ? ORDER BY id ASC LIMIT ? OFFSET ?
2024-10-10 10:05:16 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-10 10:05:16 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully filtered Products with page: 1 and pageSize: 6
2024-10-10 10:05:16 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:16 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:19 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:19 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:20 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-10 10:05:20 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Products for main page: SELECT * FROM product WHERE category_type = ? ORDER BY category_type ASC LIMIT ?
2024-10-10 10:05:20 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-10 10:05:20 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved Products for main page with categoryType: Elevator
2024-10-10 10:05:20 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:05:20 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:14:07 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-10 10:14:07 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-10 10:14:07 [scheduling-1] INFO  c.I.o.entity.OrderCleanupService - Expired Orders: 0
2024-10-10 10:29:15 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-10 10:29:15 [main] INFO  c.I.o.OrderManagementApplication - Starting OrderManagementApplication using Java 17.0.11 with PID 26292 (C:\Users\MCARDAUC\Desktop\order-management\target\classes started by mcardauc in C:\Users\MCARDAUC\Desktop\order-management)
2024-10-10 10:29:15 [main] INFO  c.I.o.OrderManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-10 10:29:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-10-10 10:29:17 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-10 10:29:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-10 10:29:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-10-10 10:29:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-10 10:29:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1976 ms
2024-10-10 10:29:19 [main] INFO  liquibase.changelog - Reading from test.DATABASECHANGELOG
2024-10-10 10:29:19 [main] INFO  liquibase.executor - Changelog query completed.
2024-10-10 10:29:20 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@71734463, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f1d6a13, org.springframework.security.web.context.SecurityContextHolderFilter@6f65aa58, org.springframework.security.web.header.HeaderWriterFilter@407f2029, org.springframework.web.filter.CorsFilter@7cbf4f8c, org.springframework.security.web.authentication.logout.LogoutFilter@7a78d380, com.ImperioElevator.ordermanagement.security.JwtFilter@1bfa5a13, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36d7a68a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45dc7be, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55c46ec1, org.springframework.security.web.session.SessionManagementFilter@5a583720, org.springframework.security.web.access.ExceptionTranslationFilter@6b3b2c34, org.springframework.security.web.access.intercept.AuthorizationFilter@5d22604e]
2024-10-10 10:29:20 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-10 10:29:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-10-10 10:29:20 [main] INFO  c.I.o.OrderManagementApplication - Started OrderManagementApplication in 5.22 seconds (process running for 5.86)
2024-10-10 10:29:20 [main] INFO  c.I.o.OrderManagementApplication - Application started successfully
2024-10-10 10:30:11 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-10 10:30:11 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-10 10:30:11 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-10 10:30:11 [http-nio-8080-exec-4] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.UserController
2024-10-10 10:30:11 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:30:11 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:30:11 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:30:11 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:30:11 [http-nio-8080-exec-7] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.NotificationController
2024-10-10 10:30:11 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:30:11 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:30:11 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:30:11 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:30:11 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:30:11 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:30:11 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:30:11 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:38:24 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:38:24 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:38:24 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:38:24 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:38:24 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:38:24 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:38:24 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:38:24 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:38:24 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:38:24 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:38:24 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:38:24 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:38:26 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 10:38:26 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 10:38:26 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:38:26 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:38:26 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:38:26 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:38:28 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to confirm Order status by email: UPDATE orders SET order_status = 'CONFIRMED' WHERE id = (SELECT order_id FROM token WHERE token_value = ? AND token_type = 'ORDER' AND is_enabled = true)
2024-10-10 10:38:28 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to confirm Order status by email: UPDATE orders SET order_status = 'CONFIRMED' WHERE id = (SELECT order_id FROM token WHERE token_value = ? AND token_type = 'ORDER' AND is_enabled = true)
2024-10-10 10:38:28 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - TOKEN received for order confirmation: VQrgYJMRrusOqgqmrAsb8xQJ665ZRMAi3mIlY1nFhY
2024-10-10 10:38:28 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - TOKEN received for order confirmation: VQrgYJMRrusOqgqmrAsb8xQJ665ZRMAi3mIlY1nFhY
2024-10-10 10:38:28 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.sql.SQLException: The order has already been confirmed or no valid confirmation token was found.] with root cause
java.sql.SQLException: The order has already been confirmed or no valid confirmation token was found.
	at com.ImperioElevator.ordermanagement.dao.daoimpl.OrderDaoImpl.updateOrderEmailConfirmStatus(OrderDaoImpl.java:158)
	at com.ImperioElevator.ordermanagement.service.serviceimpl.EmailServiceImpl.updateOrderEmailConfirmStatus(EmailServiceImpl.java:83)
	at com.ImperioElevator.ordermanagement.controller.OrderController.sendConfirmationOrderEmailStatus(OrderController.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.ImperioElevator.ordermanagement.security.JwtFilter.doFilterInternal(JwtFilter.java:60)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-10-10 10:38:28 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 10:38:28 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 10:50:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 10:50:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 10:50:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 10:50:22 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 10:50:23 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:50:23 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 10:50:23 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:50:23 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:50:23 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:50:23 [http-nio-8080-exec-2] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:50:23 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:50:23 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 10:50:23 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:50:23 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 10:50:23 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:50:23 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 10:51:06 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'entity' for method parameter type Notification is not present]
2024-10-10 10:57:15 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?
2024-10-10 10:57:15 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?
2024-10-10 10:57:15 [http-nio-8080-exec-1] ERROR c.I.o.dao.daoimpl.ProductDaoImpl - Failed to add the is read to the user notifications org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?]; Parameter index out of range (2 > number of parameters, which is 1).
2024-10-10 10:57:15 [http-nio-8080-exec-1] ERROR c.I.o.dao.daoimpl.ProductDaoImpl - Failed to add the is read to the user notifications org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?]; Parameter index out of range (2 > number of parameters, which is 1).
2024-10-10 10:57:15 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?]; Parameter index out of range (2 > number of parameters, which is 1).] with root cause
java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64)
	at com.mysql.cj.jdbc.ClientPreparedStatement.checkBounds(ClientPreparedStatement.java:1345)
	at com.mysql.cj.jdbc.ClientPreparedStatement.getCoreParameterIndex(ClientPreparedStatement.java:1358)
	at com.mysql.cj.jdbc.ClientPreparedStatement.setObject(ClientPreparedStatement.java:1632)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:427)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:241)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:173)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.doSetValue(ArgumentPreparedStatementSetter.java:68)
	at org.springframework.jdbc.core.ArgumentPreparedStatementSetter.setValues(ArgumentPreparedStatementSetter.java:50)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:971)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:656)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:968)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1023)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1033)
	at com.ImperioElevator.ordermanagement.dao.daoimpl.UserNotificationDaoImpl.notificationIsRead(UserNotificationDaoImpl.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.ImperioElevator.ordermanagement.dao.daoimpl.UserNotificationDaoImpl$$SpringCGLIB$$0.notificationIsRead(<generated>)
	at com.ImperioElevator.ordermanagement.service.serviceimpl.NotificationServiceImpl.notificationIsRead(NotificationServiceImpl.java:48)
	at com.ImperioElevator.ordermanagement.controller.NotificationController.notificationIsRead(NotificationController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.ImperioElevator.ordermanagement.security.JwtFilter.doFilterInternal(JwtFilter.java:60)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-10-10 11:00:00 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-10 11:00:00 [scheduling-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully expired 0 unconfirmed orders
2024-10-10 11:00:00 [scheduling-1] INFO  c.I.o.entity.OrderCleanupService - Expired Orders: 0
2024-10-10 11:00:37 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-10 11:00:37 [main] INFO  c.I.o.OrderManagementApplication - Starting OrderManagementApplication using Java 17.0.11 with PID 26812 (C:\Users\MCARDAUC\Desktop\order-management\target\classes started by mcardauc in C:\Users\MCARDAUC\Desktop\order-management)
2024-10-10 11:00:37 [main] INFO  c.I.o.OrderManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-10 11:00:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-10-10 11:00:39 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-10 11:00:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-10 11:00:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-10-10 11:00:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-10 11:00:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1901 ms
2024-10-10 11:00:40 [main] INFO  liquibase.changelog - Reading from test.DATABASECHANGELOG
2024-10-10 11:00:40 [main] INFO  liquibase.executor - Changelog query completed.
2024-10-10 11:00:41 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@29f8134, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77a9ac36, org.springframework.security.web.context.SecurityContextHolderFilter@2c7375da, org.springframework.security.web.header.HeaderWriterFilter@1c3d9e28, org.springframework.web.filter.CorsFilter@3c743d40, org.springframework.security.web.authentication.logout.LogoutFilter@fb5d334, com.ImperioElevator.ordermanagement.security.JwtFilter@9c0d0bd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@775c4054, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6bc25ac2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5aac6f9f, org.springframework.security.web.session.SessionManagementFilter@4470106b, org.springframework.security.web.access.ExceptionTranslationFilter@151a6598, org.springframework.security.web.access.intercept.AuthorizationFilter@41f686af]
2024-10-10 11:00:41 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-10 11:00:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-10-10 11:00:42 [main] INFO  c.I.o.OrderManagementApplication - Started OrderManagementApplication in 5.156 seconds (process running for 5.711)
2024-10-10 11:00:42 [main] INFO  c.I.o.OrderManagementApplication - Application started successfully
2024-10-10 11:03:00 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-10 11:03:00 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-10 11:03:00 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-10 11:03:01 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:03:01 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:03:01 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:03:01 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:03:01 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:03:01 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:03:01 [http-nio-8080-exec-5] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.UserController
2024-10-10 11:03:01 [http-nio-8080-exec-8] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.NotificationController
2024-10-10 11:03:01 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:03:01 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:03:01 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:03:01 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:03:01 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:03:01 [http-nio-8080-exec-6] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:03:01 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:03:01 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:03:01 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:03:01 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:03:19 [http-nio-8080-exec-3] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.OrderController
2024-10-10 11:03:19 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Deleting the operators from the order DELETE FROM order_operators WHERE order_id = ?
2024-10-10 11:03:19 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Deleting the operators from the order DELETE FROM order_operators WHERE order_id = ?
2024-10-10 11:03:19 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Deleting the operator from the order DELETE FROM order_operators WHERE order_id = ? AND user_id = ?
2024-10-10 11:03:19 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Deleting the operator from the order DELETE FROM order_operators WHERE order_id = ? AND user_id = ?
2024-10-10 11:03:19 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:03:19 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:03:19 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:03:19 [http-nio-8080-exec-7] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:03:21 [http-nio-8080-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'entity' for method parameter type Notification is not present]
2024-10-10 11:03:35 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?
2024-10-10 11:03:35 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?
2024-10-10 11:03:35 [http-nio-8080-exec-5] ERROR c.I.o.dao.daoimpl.ProductDaoImpl - Failed to add the is read to the user notifications org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?]; SQL state [HY000]; error code [1366]; Incorrect integer value: 'TRUE' for column 'is_read' at row 1
2024-10-10 11:03:35 [http-nio-8080-exec-5] ERROR c.I.o.dao.daoimpl.ProductDaoImpl - Failed to add the is read to the user notifications org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?]; SQL state [HY000]; error code [1366]; Incorrect integer value: 'TRUE' for column 'is_read' at row 1
2024-10-10 11:03:35 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [UPDATE user_notifications SET is_read = 'TRUE' WHERE user_id = ?]; SQL state [HY000]; error code [1366]; Incorrect integer value: 'TRUE' for column 'is_read' at row 1] with root cause
java.sql.SQLException: Incorrect integer value: 'TRUE' for column 'is_read' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:973)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:656)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:968)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1023)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:1033)
	at com.ImperioElevator.ordermanagement.dao.daoimpl.UserNotificationDaoImpl.notificationIsRead(UserNotificationDaoImpl.java:44)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:756)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.ImperioElevator.ordermanagement.dao.daoimpl.UserNotificationDaoImpl$$SpringCGLIB$$0.notificationIsRead(<generated>)
	at com.ImperioElevator.ordermanagement.service.serviceimpl.NotificationServiceImpl.notificationIsRead(NotificationServiceImpl.java:48)
	at com.ImperioElevator.ordermanagement.controller.NotificationController.notificationIsRead(NotificationController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.ImperioElevator.ordermanagement.security.JwtFilter.doFilterInternal(JwtFilter.java:60)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-10-10 11:05:41 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-10 11:05:41 [main] INFO  c.I.o.OrderManagementApplication - Starting OrderManagementApplication using Java 17.0.11 with PID 26040 (C:\Users\MCARDAUC\Desktop\order-management\target\classes started by mcardauc in C:\Users\MCARDAUC\Desktop\order-management)
2024-10-10 11:05:41 [main] INFO  c.I.o.OrderManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-10 11:05:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-10-10 11:05:42 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-10 11:05:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-10 11:05:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-10-10 11:05:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-10 11:05:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1737 ms
2024-10-10 11:05:44 [main] INFO  liquibase.changelog - Reading from test.DATABASECHANGELOG
2024-10-10 11:05:44 [main] INFO  liquibase.executor - Changelog query completed.
2024-10-10 11:05:44 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a5ce4b8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38848217, org.springframework.security.web.context.SecurityContextHolderFilter@7b29cdea, org.springframework.security.web.header.HeaderWriterFilter@12548f9a, org.springframework.web.filter.CorsFilter@1607d391, org.springframework.security.web.authentication.logout.LogoutFilter@12266084, com.ImperioElevator.ordermanagement.security.JwtFilter@18e6b72b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3eedd0e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b3b2c34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38826984, org.springframework.security.web.session.SessionManagementFilter@305881b8, org.springframework.security.web.access.ExceptionTranslationFilter@49bb808f, org.springframework.security.web.access.intercept.AuthorizationFilter@2444c3df]
2024-10-10 11:05:44 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-10 11:05:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-10-10 11:05:45 [main] INFO  c.I.o.OrderManagementApplication - Started OrderManagementApplication in 4.653 seconds (process running for 5.171)
2024-10-10 11:05:45 [main] INFO  c.I.o.OrderManagementApplication - Application started successfully
2024-10-10 11:06:29 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-10 11:06:29 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-10 11:06:29 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-10 11:06:29 [http-nio-8080-exec-2] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.NotificationController
2024-10-10 11:06:29 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:06:29 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:22:03 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:22:03 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:22:04 [http-nio-8080-exec-9] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.UserController
2024-10-10 11:22:04 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:22:04 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:22:04 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:22:04 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:22:06 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:22:06 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:22:24 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:22:24 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:22:24 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:22:24 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:22:24 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:22:24 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:22:24 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:22:24 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:22:24 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:22:24 [http-nio-8080-exec-1] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:22:24 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:22:24 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:22:24 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:22:24 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:22:24 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:22:24 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:22:30 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'userId' for method parameter type Long is not present]
2024-10-10 11:26:46 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:26:46 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:26:46 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:26:46 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:26:46 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:26:46 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:26:46 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:26:46 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:26:46 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:26:46 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:26:46 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:26:46 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:26:46 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:26:46 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:26:46 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:26:46 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:26:54 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'userId' for method parameter type Long is not present]
2024-10-10 11:27:27 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:27:27 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:27:27 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:27:27 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:27:27 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:27:27 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:27:27 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:27:27 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:27:27 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:27:27 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:27:27 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:27:27 [http-nio-8080-exec-9] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:27:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:27:27 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:27:28 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:27:28 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:27:44 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'userId' for method parameter type Long is not present]
2024-10-10 11:33:04 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:33:04 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:33:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:05 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:05 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:05 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:09 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:33:09 [http-nio-8080-exec-6] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find Product by id: SELECT * FROM product WHERE id = ?
2024-10-10 11:33:23 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:33:23 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by email: SELECT * FROM user WHERE email = ?
2024-10-10 11:33:24 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:33:24 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to select UserID by email: SELECT id FROM user WHERE email = ?
2024-10-10 11:33:24 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:24 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:24 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:24 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:24 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:33:24 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:33:24 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:24 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:24 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:24 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:24 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:24 [http-nio-8080-exec-5] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:32 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:33:32 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:33:32 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:33:32 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:33:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:45 [http-nio-8080-exec-8] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:45 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:45 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:33:45 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:45 [http-nio-8080-exec-8] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:45 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:45 [http-nio-8080-exec-4] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:33:45 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:45 [http-nio-8080-exec-4] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:33:45 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:33:45 [http-nio-8080-exec-7] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ? AND un.is_read = FALSE
2024-10-10 11:36:07 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-10 11:36:07 [main] INFO  c.I.o.OrderManagementApplication - Starting OrderManagementApplication using Java 17.0.11 with PID 8720 (C:\Users\MCARDAUC\Desktop\order-management\target\classes started by mcardauc in C:\Users\MCARDAUC\Desktop\order-management)
2024-10-10 11:36:07 [main] INFO  c.I.o.OrderManagementApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-10 11:36:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-10-10 11:36:09 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-10 11:36:09 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-10 11:36:09 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.11]
2024-10-10 11:36:09 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-10 11:36:09 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1770 ms
2024-10-10 11:36:11 [main] INFO  liquibase.changelog - Reading from test.DATABASECHANGELOG
2024-10-10 11:36:11 [main] INFO  liquibase.executor - Changelog query completed.
2024-10-10 11:36:11 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7be3abaa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29f8134, org.springframework.security.web.context.SecurityContextHolderFilter@681311a7, org.springframework.security.web.header.HeaderWriterFilter@6fa3def8, org.springframework.web.filter.CorsFilter@77a9ac36, org.springframework.security.web.authentication.logout.LogoutFilter@2838eb, com.ImperioElevator.ordermanagement.security.JwtFilter@3313463c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@68c4db77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e89eba7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c743d40, org.springframework.security.web.session.SessionManagementFilter@2e4d4d22, org.springframework.security.web.access.ExceptionTranslationFilter@5f33e6d, org.springframework.security.web.access.intercept.AuthorizationFilter@4407b042]
2024-10-10 11:36:11 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-10 11:36:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-10-10 11:36:12 [main] INFO  c.I.o.OrderManagementApplication - Started OrderManagementApplication in 4.717 seconds (process running for 5.275)
2024-10-10 11:36:12 [main] INFO  c.I.o.OrderManagementApplication - Application started successfully
2024-10-10 11:36:33 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-10 11:36:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-10 11:36:33 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-10-10 11:36:33 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:36:33 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:36:33 [http-nio-8080-exec-2] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.UserController
2024-10-10 11:36:33 [http-nio-8080-exec-3] WARN  o.s.c.LocalVariableTableParameterNameDiscoverer - Using deprecated '-debug' fallback for parameter name resolution. Compile the affected code with '-parameters' instead or avoid its introspection: com.ImperioElevator.ordermanagement.controller.NotificationController
2024-10-10 11:36:33 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:33 [http-nio-8080-exec-3] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:33 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:36:33 [http-nio-8080-exec-2] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:36:33 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:36:33 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:36:33 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:36:33 [http-nio-8080-exec-1] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:36:33 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:36:33 [http-nio-8080-exec-1] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:36:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:41 [http-nio-8080-exec-5] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:41 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:41 [http-nio-8080-exec-6] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:48 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:48 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:49 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:49 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:51 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:51 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:51 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:51 [http-nio-8080-exec-10] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:52 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:52 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:36:53 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:36:53 [http-nio-8080-exec-2] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:38:04 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:38:04 [http-nio-8080-exec-7] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Set the notifications on read UPDATE user_notifications SET is_read = 1 WHERE user_id = ?
2024-10-10 11:38:04 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:38:04 [http-nio-8080-exec-8] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:38:29 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:38:29 [http-nio-8080-exec-9] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find User by id: SELECT * FROM user WHERE id = ?
2024-10-10 11:38:29 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:38:29 [http-nio-8080-exec-10] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:38:29 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:38:29 [http-nio-8080-exec-10] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:38:29 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:38:29 [http-nio-8080-exec-3] DEBUG c.I.o.dao.daoimpl.ProductDaoImpl - Executing SQL to find last created Orders: SELECT o.*, u1.username AS creator_username, GROUP_CONCAT(DISTINCT u2.username SEPARATOR ', ') AS operator_username, GROUP_CONCAT(DISTINCT u2.id SEPARATOR ', ') AS operator_user_id FROM orders o LEFT JOIN order_operators oo ON o.id = oo.order_id LEFT JOIN user u1 ON o.user_id = u1.id LEFT JOIN user u2 ON oo.user_id = u2.id GROUP BY o.id, u1.username ORDER BY o.id DESC LIMIT ?
2024-10-10 11:38:29 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:38:29 [http-nio-8080-exec-3] INFO  c.I.o.dao.daoimpl.ProductDaoImpl - Successfully retrieved last created Orders
2024-10-10 11:38:29 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
2024-10-10 11:38:29 [http-nio-8080-exec-4] DEBUG c.I.o.d.daoimpl.NotificationDaoImpl - Get the notification of the customer create order from db SELECT n.message FROM notifications n JOIN user_notifications un ON n.id = un.notification_id WHERE un.user_id = ?
